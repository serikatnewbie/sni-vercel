---
import Layout from "@/layouts/Layout.astro";
import Main   from "@/layouts/Main.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import rawContests from "@/data/ctftime/ctf_events.json" assert { type: "json" };

interface RawContest {
  place:        string;
  event:        string;
  href:         string;
  ratingPoints: string;
  ctfPoints:    string;
  date:         string;           
}

interface Contest {
  place:        string;
  event:        string;
  href:         string;
  ratingPoints: number;
  ctfPoints:    string;
  date:         Date;
}

const rawList = rawContests as RawContest[];
const contests: Contest[] = rawList.map((c) => ({
  place:        c.place,
  event:        c.event,
  href:         c.href,
  ratingPoints: Number(c.ratingPoints),
  ctfPoints:    c.ctfPoints,
  date:         new Date(c.date),
}));

contests.sort((a, b) => b.date.getTime() - a.date.getTime());

function getMedalEmoji(place: string): string {
  switch (place) {
    case "1": return "üëë";
    case "2": return "ü•à";
    case "3": return "ü•â";
    case "4": return "üèÖ";
    default:  return "";
  }
}
---

<Layout>
  <Header />
  <Main
    pageTitle="Contests"
    pageDesc="CTF events and rating points of SNI based on CTFtime.org"
  >
    <div class="mb-4 text-right">
      <button
        id="toggle-show"
        class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition"
      >
        Show All
      </button>
    </div>

    <div id="contests-table" class="relative overflow-x-auto shadow-md sm:rounded-lg">
      <table class="w-full text-left text-sm text-gray-800 dark:text-gray-300">
        <thead class="sticky top-0 z-10 bg-indigo-600 text-xs text-white uppercase">
          <tr>
            <th class="px-6 py-3">Date</th>
            <th class="px-6 py-3">Place</th>
            <th class="px-6 py-3">Event</th>
            <th class="px-6 py-3">Points</th>
          </tr>
        </thead>
        <tbody>
          {contests.map((contest, i) => (
            <tr
              class={
                [
                  i % 2 === 0
                    ? "bg-white dark:bg-gray-800"
                    : "bg-gray-50 dark:bg-gray-900",
                  "border-b transition hover:bg-emerald-50 dark:border-gray-700 dark:hover:bg-gray-700",
                  i >= 10 ? "extra hidden" : "",
                ]
                  .filter(Boolean)
                  .join(" ")
              }
            >
              <td class="px-6 py-4 whitespace-nowrap">
                {contest.date.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' })}
              </td>
              <th scope="row" class="px-6 py-4 font-semibold text-gray-900 dark:text-white">
                <div class="flex items-center">
                  <div class="w-6">{getMedalEmoji(contest.place)}</div>
                  <span class="ml-2 text-sm font-medium">{contest.place}</span>
                </div>
              </th>
              <td class="px-6 py-4">
                <a
                  href={`https://ctftime.org/${contest.href}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="hover:underline"
                >
                  {contest.event}
                </a>
              </td>
              <td class="px-6 py-4">
                <div class="text-emerald-600 dark:text-emerald-400">
                  {contest.ratingPoints} rating points
                </div>
                <div class="text-blue-600 dark:text-blue-400">
                  {Math.floor(Number(contest.ctfPoints))} CTF points
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>

    <script>
      const btn = document.getElementById('toggle-show');
      const extraRows = document.querySelectorAll('tr.extra');
      let showingAll = false;
      if (btn) {
        btn.addEventListener('click', () => {
          extraRows.forEach((row) => {
            row.classList.toggle('hidden', !showingAll);
          });
          showingAll = !showingAll;
          btn.textContent = showingAll ? 'Show Top 10' : 'Show All';
        });
      }
    </script>
  </Main>
  <Footer />
</Layout>
